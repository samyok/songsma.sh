{"version":3,"sources":["partials/logo.png","partials/Nav.js","bluedouble.png","redsingle.png","utils.js","Game.js","App.js","index.js"],"names":["Nav","className","src","logo","alt","href","target","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","Queue","n","_a","this","_n","b","push","length","shift","Game","setLoading","data","setPage","hash","level","result","multiplayer","bpm","socket","_beatsPerMinute","songStartTime","Date","now","sleep","Promise","r","setTimeout","url","useState","Audio","audio","playing","setPlaying","play","pause","addEventListener","removeEventListener","useAudio","_songFilename","musicIsPlaying","toggleMusic","Cam","Cvs","model","setModel","pose","setPose","setCalibrationValue","localStorage","getItem","deviceId","setDeviceId","devices","setDevices","wcData","setWCData","leftSaber","setLeftSaber","rightSaber","setRightSaber","Math","round","POSEFPS","blueVX","blueVY","redVX","redVY","score","lives","setLives","window","location","page","win","redD","ev","reload","document","event","key","video","readyState","estimateSinglePose","getContext","flipHorizontal","then","ps","ctx","fillStyle","clearRect","canvas","width","height","keypoints","filter","kp","part","includes","forEach","fillRect","position","x","y","pv","kpObj","leftWrist","leftElbow","scene","scale","set","w","h","z","rightWrist","handleDevices","useCallback","mediaDevices","kind","onWCMedia","mediaStream","a","console","log","active","v","videoWidth","videoHeight","posenetSetup","posenet","architecture","outputStride","inputResolution","multiplier","net","navigator","enumerateDevices","cubes","setCubes","renderer","setRenderer","setScene","camera","setCamera","_notes","map","note","playAt","_time","i","genCube","_lineIndex","_lineLayer","_type","_cutDirection","THREE","breakCubes","min","remove","splice","background","noteLoop","innerWidth","innerHeight","alpha","loader","GLTFLoader","lineIndex","lineLayer","type","cutDirection","postProcessingCube","gltf","add","rotation","PI","load","genSaber","file","rotX","rotY","rotZ","setSize","outputEncoding","body","appendChild","domElement","playingFieldGeo","fieldColor","color","side","opacity","transparent","playingField","rotateX","lights","fog","max","abs","render","distance","sqrt","value","onChange","currentTarget","setItem","device","label","style","minHeight","ref","mirrored","videoConstraints","ideal","onUserMedia","top","left","JSON","stringify","zIndex","GameLoadingScreen","loading","backgroundColor","display","justifyContent","alignItems","fontSize","SongLoadingScreen","results","setResults","query","onSearch","fetch","json","mode","toLocaleUpperCase","split","join","onClick","_coverImageFilename","_songName","_songAuthorName","_difficultyBeatmapSets","_beatmapCharacteristicName","toLowerCase","_difficultyBeatmaps","diff","_beatmapFilename","text","view","parse","_difficulty","WaitForTeam","someoneJoined","emit","on","GameFinishedScreen","setResult","pathname","num","loss","tie","messages","textAlign","maxWidth","_levelAuthorName","App","setSocket","s","socketIOClient","endpoint","singlered","doubleblue","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.223707c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.88e8f6f6.png\";","import logo from \"./logo.png\";\nexport default function Nav() {\n    return (\n        <>\n            {\" \"}\n            <div className=\"Nav\">\n                <img src={logo} alt=\"\" />\n                <h1>SongSmash</h1>\n                <div className=\"filler\" />\n                <div className=\"link\">\n                    <a href=\"https://devpost.com/software/songsma-sh-tagline\">Devpost</a>\n                </div>\n                <div className=\"link\">\n                    <a href=\"https://github.com/samyok/songsma.sh\" target=\"_blank\">\n                        GitHub\n                    </a>\n                </div>\n            </div>\n            <div className=\"Footer\">\n                Made by Samyok Nepal, Allen Chang, Sampada Nepal, and Jason Chang\n            </div>\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/bluedouble.e532cd58.png\";","export default __webpack_public_path__ + \"static/media/redsingle.7bce6aa2.png\";","import { useEffect, useRef } from \"react\";\n\nexport const sleep = n => new Promise(r => setTimeout(r, n));\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport { useInterval } from \"./utils\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport \"./App.sass\";\n\n// import * as Stats from \"stats.js\";\n\nclass Queue {\n    _a = [];\n    _n;\n\n    constructor(n) {\n        this._n = n;\n    }\n\n    add(b) {\n        this._a.push(b);\n        if (this._a.length > this._n) this._a.shift();\n    }\n\n    velocity() {\n        return (this._a[0] - this._a[this._a.length - 1]) / this._a.length;\n    }\n}\n\n// const stats = new Stats();\n// stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n\nfunction Game({ setLoading, data, setPage }) {\n    const {\n        hash, // the hash of the song, all song files under /api/hash/\n        level, // level data (ExpertPlus.dat)\n        result, // result = search result (info.dat)\n        multiplayer,\n        socket,\n    } = data;\n\n    const useAudio = url => {\n        const [audio] = useState(new Audio(url));\n        const [playing, setPlaying] = useState(false);\n\n        const toggle = () => setPlaying(!playing);\n\n        useEffect(() => {\n            playing ? audio.play() : audio.pause();\n        }, [playing]);\n\n        useEffect(() => {\n            audio.addEventListener(\"ended\", () => setPlaying(false));\n            return () => {\n                audio.removeEventListener(\"ended\", () => setPlaying(false));\n            };\n        }, []);\n\n        return [playing, toggle];\n    };\n\n    var bpm = result._beatsPerMinute;\n    var songStartTime = Date.now();\n\n    const sleep = n => new Promise(r => setTimeout(r, n));\n    const [musicIsPlaying, toggleMusic] = useAudio(`/audioapi/${hash}/${result._songFilename}`);\n\n    const Cam = useRef();\n    const Cvs = useRef();\n\n    const POSEFPS = 25;\n\n    // debug\n    const [debug, setDebug] = useState(\"string\");\n\n    // pn model\n    const [model, setModel] = useState();\n    const [pose, setPose] = useState();\n    const [calibration, setCalibrationValue] = useState(100);\n\n    // camera\n    const [deviceId, setDeviceId] = useState(localStorage.getItem(\"CameraId\") || {});\n    const [devices, setDevices] = useState([]);\n    const [wcData, setWCData] = useState(null);\n\n    // sabers\n    const [leftSaber, setLeftSaber] = useState(null);\n    const [rightSaber, setRightSaber] = useState(null);\n\n    // velocities\n    const [blueVX, setBlueVX] = useState(new Queue(Math.round(POSEFPS * 0.2)));\n    const [blueVY, setBlueVY] = useState(new Queue(Math.round(POSEFPS * 0.2)));\n    const [redVX, setBRedVX] = useState(new Queue(Math.round(POSEFPS * 0.2)));\n    const [redVY, setRedVY] = useState(new Queue(Math.round(POSEFPS * 0.2)));\n\n    // score stuffs\n    const [score, setScore] = useState(0);\n    const [lives, setLives] = useState(50);\n\n    useEffect(() => {\n        if (lives > 0) return;\n\n        // if (multiplayer) socket.emit(\"loss\", hash);\n        window.location.href = `/win/${hash}/${score}/loss`;\n        return setPage({ page: \"gameFinsihed\", data: { ...data, win: \"lose\", score } });\n    }, [score, lives]);\n\n    // directions\n    const [blueD, setBlueD] = useState(null);\n    const [redD, setRedD] = useState(null);\n\n    // attach listeners\n    useEffect(() => {\n        window.addEventListener(\"resize\", ev => {\n            window.location.reload();\n        });\n        window.document.addEventListener(\"keypress\", event => {\n            if (event.key === \"k\") {\n                // if (multiplayer) socket.emit(\"loss\", hash);\n                window.location.href = `/win/${hash}/${score}/loss`;\n                setPage({ page: \"gameFinished\", data: { ...data, score, win: \"lose\" } });\n            }\n        });\n    }, []);\n\n    function compute() {}\n\n    /*** Webcam Draw Loop ***/\n    useInterval(() => {\n        if (\n            !model ||\n            !Cam.current ||\n            !Cam.current?.video ||\n            Cam.current.video.readyState !== 4 ||\n            !model?.estimateSinglePose ||\n            !Cvs.current?.getContext\n        ) {\n            return;\n        }\n        model\n            .estimateSinglePose(Cam.current.video, {\n                flipHorizontal: true,\n            })\n            .then(ps => {\n                if (!Cvs.current) return;\n                let ctx = Cvs.current.getContext(\"2d\");\n                ctx.fillStyle = \"red\";\n                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                ps.keypoints\n                    .filter(kp => kp.score > 0.1)\n                    .filter(kp => kp.part.includes(\"Wrist\"))\n                    .forEach(kp => {\n                        ctx.fillRect(kp.position.x, kp.position.y, 6, 6);\n                    });\n\n                // drawing arm\n                const noseX = ps.keypoints.filter(kp => kp.part === \"nose\")[0].position.x;\n\n                setPose(pv => {\n                    let kpObj = pv || {};\n                    ps.keypoints.forEach(kp => {\n                        kpObj[kp.part] = kp.position;\n                    });\n                    return kpObj;\n                });\n                if (pose) {\n                    // parse poses\n                    if (pose.leftWrist && pose.leftElbow) {\n                        // ctx.strokeStyle = \"green\";\n                        // ctx.lineWidth = 10;\n                        // ctx.beginPath();\n                        // ctx.moveTo(pose.leftWrist.x, pose.leftWrist.y);\n                        // ctx.lineTo(pose.leftElbow.x, pose.leftElbow.y);\n                        // ctx.stroke();\n                        // ctx.lineWidth = 0;\n                        // wcData.w wcData.\n                        if (leftSaber) {\n                            leftSaber.scene.scale.set(0.1, 0.1, 0.1);\n                            leftSaber.scene.position.x = -2.5 + 5 * (pose.leftWrist.x / wcData.w);\n                            leftSaber.scene.position.y = 2 - 3.5 * (pose.leftWrist.y / wcData.h);\n                            leftSaber.scene.position.z = 6;\n                            // let xthatwewanttogoto =\n                            //     -2.5 +\n                            //     5 * (pose.leftWrist.x / wcData.w);\n                            // let xthatweareat = leftSaber.scene.position.x;\n                            // let Kay = 0.3;\n                            // let dx = xthatwewanttogoto - xthatweareat;\n                            // let newVX = vx + Kay * dx;\n                            // setVX(newVX);\n                            // setDebug(vx);\n                            // leftSaber.scene.position.x += Kay * dx;\n                            //\n                            // let ythatwewanttogoto =\n                            //     3 + (-3 * (pose.leftElbow.y + pose.leftWrist.y)) / wcData.h;\n                            // let ythatweareat = leftSaber.scene.position.y;\n                            // let dy = ythatwewanttogoto - ythatweareat;\n                            // let newVY = vy + Kay * dy;\n                            // setVY(newVY);\n                            // leftSaber.scene.position.y = Kay * dy;\n                        }\n                        if (rightSaber) {\n                            rightSaber.scene.scale.set(0.1, 0.1, 0.1);\n                            rightSaber.scene.position.x = -2.5 + 5 * (pose.rightWrist.x / wcData.w);\n                            rightSaber.scene.position.y = 1 - 3 * (pose.rightWrist.y / wcData.h);\n                            rightSaber.scene.position.z = 6;\n                        }\n                    }\n                    // if (pose.rightWrist && pose.rightElbow) {\n                    //     ctx.strokeStyle = \"blue\";\n                    //     ctx.lineWidth = 10;\n                    //     ctx.beginPath();\n                    //     ctx.moveTo(pose.rightWrist.x, pose.rightWrist.y);\n                    //     ctx.lineTo(pose.rightElbow.x, pose.rightElbow.y);\n                    //     ctx.stroke();\n                    //     ctx.lineWidth = 0;\n                    // }\n                }\n            });\n    }, 1000 / POSEFPS);\n\n    // webcam switcher\n    const handleDevices = useCallback(\n        mediaDevices => {\n            setLoading(\"Setting up webcam...\");\n            setDevices(mediaDevices.filter(({ kind }) => kind === \"videoinput\"));\n        },\n        [setDevices],\n    );\n\n    const onWCMedia = useCallback(async mediaStream => {\n        console.log(mediaStream, Cam.current.video);\n        while (\n            !mediaStream.active ||\n            !Cam.current.video ||\n            Cam.current.video.readyState !== 4 ||\n            !Cvs.current\n        )\n            await sleep(50);\n\n        if (mediaStream.active && Cam.current.video) {\n            let v = { w: Cam.current.video.videoWidth, h: Cam.current.video.videoHeight };\n            setWCData(v);\n\n            Cvs.current.height = v.h;\n            Cvs.current.width = v.w;\n            Cam.current.video.height = v.h;\n            Cam.current.video.width = v.w;\n            setLoading(\"Setting up TensorFlow...\");\n            posenetSetup({\n                width: v.w,\n                height: v.h,\n            }).then(model => {\n                setModel(model);\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        navigator.mediaDevices.enumerateDevices().then(handleDevices);\n    }, [handleDevices]);\n\n    /** ML MODEL SETUP **/\n    async function posenetSetup({ width, height }) {\n        const net = await posenet.load({\n            architecture: \"MobileNetV1\",\n            outputStride: 16,\n            inputResolution: { width, height },\n            multiplier: 0.75,\n        });\n        // const net = await posenet.load({\n        //     architecture: \"ResNet50\",\n        //     outputStride: 32,\n        //     inputResolution: { width: 250, height: 200 },\n        //     quantBytes: 2,\n        //     multiplier: 1,\n        // });\n\n        // const net = await posenet.load({\n        //     inputResolution: { width: 640, height: 480 },\n        //     scale: 0.8,\n        // });\n        console.log(\"loaded posenet.\");\n        return net;\n    }\n\n    /**\n     *\n     *\n     * THREE JS SETUP\n     *\n     *\n     */\n\n    const [cubes, setCubes] = useState([]);\n    const [renderer, setRenderer] = useState(null);\n    const [scene, setScene] = useState();\n    const [camera, setCamera] = useState();\n\n    async function noteLoop() {\n        if (!musicIsPlaying) setTimeout(() => toggleMusic(), 500);\n        level._notes = level._notes.map(note => ({\n            ...note,\n            playAt: (60000 * note._time) / bpm + songStartTime, //; //5 / (0.0012 * bpm * POSEFPS)\n        }));\n        for (let i = 0; i < level._notes.length; i++) {\n            await sleep(level._notes[i].playAt - Date.now());\n            genCube(\n                level._notes[i]._lineIndex,\n                level._notes[i]._lineLayer,\n                level._notes[i]._type,\n                level._notes[i]._cutDirection,\n            );\n        }\n        await sleep(3000);\n\n        if (multiplayer) window.location.href = `/win/${hash}/${score}/tie`;\n        else {\n            window.location.href = `/win/${hash}/${score}/win`;\n        }\n\n        setPage({ page: \"gameFinished\", data: { ...data, score, win: \"win\" } });\n    }\n\n    useEffect(async () => {\n        if (!pose) return;\n        setLoading(false);\n        setScene(new THREE.Scene());\n    }, [pose]);\n\n    const breakCubes = useCallback(\n        (x, y) => {\n            setLives(pv => Math.min(pv + 3, 100));\n            return setCubes(pv => {\n                for (let i = 0; i < pv.length; i++) {\n                    if (!pv[i]) continue;\n                    if (pv[i].scene.position.x === x && pv[i].scene.position.y === y) {\n                        // setScore(pv => pv + (10 - pv[i].scene.position.z) * 10);\n                        scene.remove(pv[i].scene);\n                        pv.splice(i, 1);\n                        return pv;\n                    }\n                }\n                return pv;\n            });\n        },\n        [scene],\n    );\n    useEffect(() => {\n        if (!scene) return;\n        scene.background = null;\n        noteLoop().then(() => {\n            console.log(\"done with loop\");\n        });\n\n        setCamera(\n            new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.2, 1000),\n        );\n\n        setRenderer(new THREE.WebGLRenderer({ alpha: true }));\n    }, [scene]);\n    const loader = new GLTFLoader();\n\n    function genCube(lineIndex, lineLayer, type, cutDirection) {\n        function postProcessingCube(gltf) {\n            scene.add(gltf.scene);\n            gltf.scene.position.z = 0;\n            gltf.scene.position.x = lineIndex - 1.5;\n            gltf.scene.position.y = lineLayer - 1.5;\n            gltf.scene.scale.set(0.42, 0.42, 0.42);\n            gltf.scene.rotation.x += Math.PI;\n            gltf.scene.rotation.z += Math.PI;\n            setCubes(pv => [...pv, { scene: gltf.scene, type, cutDirection }]);\n            switch (cutDirection[0]) {\n                case 0:\n                    gltf.scene.rotation.z += Math.PI;\n                    break;\n                case 1:\n                    break;\n                case 2:\n                    gltf.scene.rotation.z += Math.PI / 2;\n                    break;\n                case 3:\n                    gltf.scene.rotation.z += (3 * Math.PI) / 2;\n                    break;\n                case 4:\n                    gltf.scene.rotation.z += (5 * Math.PI) / 4;\n                    break;\n                case 5:\n                    gltf.scene.rotation.z += Math.PI / 4;\n                    break;\n                case 6:\n                    gltf.scene.rotation.z += (7 * Math.PI) / 4;\n                    break;\n                case 7:\n                    gltf.scene.rotation.z += (5 * Math.PI) / 4;\n            }\n        }\n\n        if (type === 0) loader.load(\"/redbox.glb\", postProcessingCube);\n\n        if (type === 1) loader.load(\"/bluebox.glb\", postProcessingCube);\n    }\n\n    function genSaber({ x, y, z, file, rotX, rotY, rotZ, callback }) {\n        loader.load(file, gltf => {\n            scene.add(gltf.scene);\n            gltf.scene.scale.set(0.42, 0.42, 0.42);\n            gltf.scene.position.x = x;\n            gltf.scene.position.y = y;\n            gltf.scene.position.z = z;\n            gltf.scene.rotation.x = rotX;\n            gltf.scene.rotation.y = rotY;\n            gltf.scene.rotation.z = rotZ;\n            if (callback) callback(gltf);\n        });\n    }\n\n    useEffect(() => {\n        if (!renderer || !scene) return;\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.outputEncoding = THREE.sRGBEncoding;\n        document.body.appendChild(renderer.domElement);\n\n        const playingFieldGeo = new THREE.PlaneGeometry(4, 5000, 1);\n        const fieldColor = new THREE.MeshBasicMaterial({\n            color: \"white\",\n            side: THREE.DoubleSide,\n            opacity: 0.5,\n            transparent: true,\n        });\n\n        const playingField = new THREE.Mesh(playingFieldGeo, fieldColor);\n\n        playingField.rotateX(Math.PI / 2);\n        playingField.position.y -= 2;\n\n        scene.add(playingField);\n\n        let lights = [];\n        lights[0] = new THREE.PointLight(0xffffff, 5, 0);\n        lights[1] = new THREE.PointLight(0xffffff, 0.1, 0);\n\n        lights[0].position.set(0, 200, 5);\n        lights[1].position.set(0, 0, 200);\n\n        for (let i = 0; i < lights.length; i++) {\n            scene.add(lights[i]);\n        }\n\n        scene.fog = new THREE.Fog(\"black\", 5, 15);\n\n        // const composer = new EffectComposer( renderer );\n\n        // document.body.appendChild(stats.dom);\n        // this func is called whenever the resources are available for it\n\n        // genCube(0, 0, 0, [4, 0, 2]);\n        // genCube(1, 1, 1, [2]);\n        // genCube(2, 2, 0, [6, 1, 2]);\n        // genCube(3, 2, 1, [7, 1, 3]);\n        genSaber({\n            x: 0,\n            y: 0,\n            z: 6,\n            file: \"/bluesphere.glb\",\n            rotZ: Math.PI / 2,\n            rotY: 0,\n            rotX: 0,\n            callback: gltf => setRightSaber(gltf),\n        });\n        genSaber({\n            x: 0,\n            y: 0,\n            z: 6,\n            file: \"/redsphere.glb\",\n            rotZ: Math.PI / 2,\n            rotY: 0,\n            rotX: 0,\n            callback: gltf => setLeftSaber(gltf),\n        });\n        // setTimeout(() => breakCubes(3, 2), 1000);\n\n        camera.position.z = 10;\n    }, [renderer]);\n\n    useInterval(() => {\n        // stats.begin();\n        if (!renderer) return;\n        for (let i = 0; i < cubes.length; i++) {\n            cubes[i].scene.position.z += 0.0012 * bpm;\n            if (cubes[i].scene.position.z > 7.5) {\n                scene.remove(cubes[i].scene);\n                cubes.splice(i, 1);\n                setLives(pv => Math.max(0, pv - 15));\n            }\n        }\n\n        if (leftSaber && rightSaber) {\n            blueVX.add(leftSaber.scene.position.x);\n            blueVY.add(leftSaber.scene.position.y);\n            redVX.add(rightSaber.scene.position.x);\n            redVY.add(rightSaber.scene.position.y);\n        }\n\n        if (rightSaber)\n            for (let i = 0; i < cubes.length; i++) {\n                if (\n                    Math.abs(cubes[i].scene.position.x - rightSaber.scene.position.x) < 0.75 &&\n                    Math.abs(cubes[i].scene.position.y - rightSaber.scene.position.y) < 0.75 &&\n                    Math.abs(cubes[i].scene.position.z - 6) < 1 &&\n                    cubes[i].type === 1\n                ) {\n                    console.log(\"BREAK\", cubes[i].cutDirection, redD);\n                    breakCubes(cubes[i].scene.position.x, cubes[i].scene.position.y);\n                }\n            }\n\n        if (leftSaber)\n            for (let i = 0; i < cubes.length; i++) {\n                if (\n                    Math.abs(cubes[i].scene.position.x - leftSaber.scene.position.x) < 0.75 &&\n                    Math.abs(cubes[i].scene.position.y - leftSaber.scene.position.y) < 0.75 &&\n                    Math.abs(cubes[i].scene.position.z - 6) < 1 &&\n                    cubes[i].type === 0\n                ) {\n                    breakCubes(cubes[i].scene.position.x, cubes[i].scene.position.y);\n                }\n            }\n\n        // if (blueD!=8) {\n        //     console.log(\"red \"+String(blueD));\n        // }\n        // if (redD!=8) {\n        //     console.log(\"blue \"+String(redD));\n        // }\n        // console.log(blueVX.velocity());\n\n        renderer.render(scene, camera);\n        // const renderPass = new RenderPass( scene, camera );\n        // composer.addPass( renderPass );\n        // composer.render();\n        // stats.end();\n    }, 1000 / POSEFPS);\n\n    const resetCalibration = useCallback(() => {\n        if (!pose) return;\n        let distance = Math.sqrt(\n            (pose.leftWrist.x - pose.leftElbow.x) ** 2 + (pose.leftWrist.y - pose.leftElbow.y) ** 2,\n        );\n        setCalibrationValue(distance);\n    }, [pose]);\n    return (\n        <>\n            <div>\n                <select\n                    value={deviceId}\n                    onChange={event => {\n                        setDeviceId(event.currentTarget.value);\n                        localStorage.setItem(\"CameraId\", event.currentTarget.value);\n                    }}>\n                    {devices.map((device, key) => (\n                        <option value={device.deviceId} key={device.deviceId}>\n                            {device.label || `Device ${key + 1}`}\n                        </option>\n                    ))}\n                </select>\n                {/*<button onChange={resetCalibration}>Set Max {calibration}</button>*/}\n                <br />\n                <div\n                    style={{\n                        position: \"relative\",\n                        minHeight: 500,\n                    }}>\n                    <Webcam\n                        ref={Cam}\n                        key={JSON.stringify(wcData)}\n                        audio={false}\n                        mirrored={true}\n                        videoConstraints={{\n                            deviceId: deviceId,\n                            width: { ideal: 250 },\n                            height: { ideal: 200 },\n                        }}\n                        onUserMedia={onWCMedia}\n                        style={{ position: \"absolute\", top: 0, left: 0 }}\n                    />\n                    <div className=\"score-container\">\n                        <div className=\"score\" style={{ width: `${lives}%` }}>\n                            &nbsp;\n                        </div>\n                    </div>\n                    <canvas\n                        ref={Cvs}\n                        style={{ position: \"absolute\", top: 0, left: 0, zIndex: 999999 }}\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Game;\n","import Nav from \"./partials/Nav\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport logo from \"./partials/logo.png\";\nimport doubleblue from \"./bluedouble.png\";\nimport singlered from \"./redsingle.png\";\nimport \"./App.sass\";\nimport socketIOClient from \"socket.io-client\";\nimport Game from \"./Game\";\n\nfunction GameLoadingScreen({ data, setPage }) {\n    const [loading, setLoading] = useState(\"Loading...\"); // any truthy value would be used.\n    return (\n        <>\n            {!!loading && (\n                <div\n                    style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        backgroundColor: \"rgba(0,0,0,0.7)\",\n                        position: \"fixed\",\n                        top: 0,\n                        left: 0,\n                        color: \"white\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        fontSize: 50,\n                    }}>\n                    {loading}\n                </div>\n            )}\n            <div>\n                <Game setLoading={setLoading} data={data} setPage={setPage} />\n            </div>\n        </>\n    );\n}\n\nfunction SongLoadingScreen({ setPage, data, socket }) {\n    const [results, setResults] = useState([]);\n    const [query, setQuery] = useState(\"\");\n    const onSearch = useCallback(() => {\n        fetch(\"/search?q=\" + query)\n            .then(r => r.json())\n            .then(r => setResults(r));\n    }, []);\n    useEffect(() => {\n        fetch(\"/search?q=\" + query)\n            .then(r => r.json())\n            .then(r => setResults(r));\n    }, []);\n    return (\n        <>\n            <Nav />\n            <div className=\"songLoader\">\n                <div className=\"header\">\n                    Song Selection - {data.mode.toLocaleUpperCase().split(\"_\").join(\" \")}\n                </div>\n                {data.mode === \"join_multiplayer\" && (\n                    <div className=\"header\">Waiting to start!</div>\n                )}\n                <div className=\"search\">\n                    <button onClick={onSearch}>Re-roll songs</button>\n                </div>\n                <div className=\"listResults\">\n                    <ul>\n                        {results.map(result => (\n                            <li>\n                                <img\n                                    src={`/api/${result.hash}/${result._coverImageFilename}`}\n                                    alt=\"cover art\"\n                                />\n                                <div className=\"info\">\n                                    <h3>{result._songName}</h3>\n                                    <p className={\"author\"}>{result._songAuthorName}</p>\n                                    {result._difficultyBeatmapSets\n                                        .filter(\n                                            type =>\n                                                type._beatmapCharacteristicName.toLowerCase() ===\n                                                \"standard\",\n                                        )[0]\n                                        ._difficultyBeatmaps.map(diff => (\n                                            <button\n                                                onClick={() => {\n                                                    fetch(\n                                                        `/api/${result.hash}/${diff._beatmapFilename}`,\n                                                    )\n                                                        .then(r => r.text())\n                                                        .then(r => {\n                                                            setPage({\n                                                                view:\n                                                                    data.mode === \"multiplayer\"\n                                                                        ? \"waitforteam\"\n                                                                        : \"game\",\n                                                                data: {\n                                                                    hash: result.hash,\n                                                                    level: JSON.parse(r),\n                                                                    result,\n                                                                },\n                                                            });\n                                                        });\n                                                }}>\n                                                {diff._difficulty}\n                                            </button>\n                                        ))}\n                                    <p className={\"info\"}>⏱️{result._beatsPerMinute}</p>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n}\n\nfunction WaitForTeam({ data, socket, setPage }) {\n    const [someoneJoined, setSomeoneJoined] = useState(false);\n    useEffect(() => {\n        socket.emit(\"looking\", data);\n        socket.on(\"joined\", () => {\n            setPage({ view: \"game\", data: { ...data, multiplayer: true, socket } });\n        });\n    }, []);\n    return (\n        <>\n            <Nav />\n            <div className=\"hero\">\n                {!someoneJoined && <h2>Waiting for someone to join you...</h2>}\n                {someoneJoined && <h2>Someone joined!!!</h2>}\n                {!someoneJoined && (\n                    <p>\n                        they should go to{\" \"}\n                        <a style={{ color: \"white\" }} href={`https://songsma.sh/m/${socket.id}`}>\n                            https://songsma.sh/m/{socket.id}\n                        </a>\n                    </p>\n                )}\n                {someoneJoined && <p>the game will start in a couple seconds</p>}\n            </div>\n        </>\n    );\n}\n\nfunction GameFinishedScreen({ data, setPage }) {\n    const [result, setResult] = useState({});\n    useEffect(() => {\n        fetch(\"/api/hash/\" + window.location.pathname.split(\"/\")[2])\n            .then(r => r.json())\n            .then(r => setResult(r));\n    });\n    let map = { win: 0, loss: 1, tie: 2 };\n    let num = map[window.location.pathname.split(\"/\")[4]];\n    let messages = [\n        [\"won!\", \"lost :c\", \"tied?!?!\"][num],\n        [\n            \"You beat your opponent in the truest battle of true wits.\",\n            \"you'll get 'em next time c:\",\n            \"how did that happen???\",\n        ][num],\n    ];\n    return (\n        <>\n            <Nav />\n            <div className=\"hero\">\n                <h2>You {messages[0]}</h2>\n                <p>{messages[1]}</p>\n                <div className=\"flex\" style={{ textAlign: \"center\" }}>\n                    <img\n                        style={{ maxWidth: 200 }}\n                        src={`/api/${result.hash}/${result._coverImageFilename}`}\n                        alt=\"\"\n                    />\n                    <h3 style={{ textAlign: \"center\" }}>\n                        {result._songAuthorName} - ${result._songName}\n                    </h3>\n                    <h6>\n                        Thank <u>${result._levelAuthorName}</u> for such writing the level :)!\n                    </h6>\n                    <button onClick={() => (window.location.href = \"/re/\")}>Play again</button>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default function App() {\n    const [page, setPage] = useState({\n        view: \"home\",\n        data: {},\n    });\n\n    useEffect(() => {\n        console.log(page);\n    }, [page]);\n\n    const [socket, setSocket] = useState({});\n    useEffect(() => {\n        if (window.location.href.includes(\"/win/\")) {\n            setPage({ view: \"gameFinished\", data: null });\n        } else if (window.location.href.includes(\"/m/\")) {\n            // setPage({ view: \"songLoader\", data: { mode: \"join_multiplayer\" } });\n        } else if (window.location.href.includes(\"/re/\")) {\n            setPage({ view: \"selectMode\", data: { mode: \"\" } });\n        }\n        fetch(\"/wsinfo\")\n            .then(r => r.json())\n            .then(r => {\n                const s = socketIOClient(r.endpoint);\n                setSocket(s);\n                console.log({ s });\n                // s.on(\"starting\", data => {\n                //     console.log(\"STARTINGS DAKSSAJ JADSIJASDIO\");\n                //     setPage(\"game\", { ...data, multiplayer: true, socket });\n                // });\n                if (window.location.pathname.includes(\"/m/\")) {\n                    s.emit(\"joinRoom\", window.location.pathname.split(\"/\")[2], data => {\n                        setPage({ view: \"game\", data: { ...data, multiplayer: true, socket } });\n                    });\n                }\n            });\n    }, []);\n\n    return (\n        <>\n            {page.view === \"home\" && (\n                <>\n                    <Nav />\n                    <div className=\"hero\">\n                        <h2>No VR headset?</h2>\n                        <p>Use your webcam to exercise to your favorite songs!</p>\n                        <button onClick={() => setPage({ view: \"selectMode\", data: {} })}>\n                            Play now\n                        </button>\n                    </div>\n                </>\n            )}\n            {page.view === \"selectMode\" && (\n                <>\n                    <Nav />\n                    <div className=\"selectMode\">\n                        <div\n                            className=\"choice\"\n                            onClick={() => setPage({ view: \"songLoader\", data: { mode: \"solo\" } })}>\n                            <img src={singlered} alt=\"SOLO\" />\n                            <p>SOLO</p>\n                        </div>\n                        <div\n                            className=\"choice\"\n                            onClick={() =>\n                                setPage({ view: \"songLoader\", data: { mode: \"multiplayer\" } })\n                            }>\n                            <img src={doubleblue} alt=\"Multiplayer\" />\n                            <p>MULTIPLAYER</p>\n                        </div>\n                    </div>\n                </>\n            )}\n            {page.view === \"songLoader\" && (\n                <SongLoadingScreen setPage={setPage} data={page.data} socket={socket} />\n            )}\n            {page.view === \"gameFinished\" && (\n                <GameFinishedScreen data={page.data} setPage={setPage} />\n            )}\n            {page.view === \"game\" && <GameLoadingScreen data={page.data} setPage={setPage} />}\n            {page.view === \"waitforteam\" && (\n                <WaitForTeam data={page.data} setPage={setPage} socket={socket} />\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}